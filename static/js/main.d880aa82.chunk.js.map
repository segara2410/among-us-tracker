{"version":3,"sources":["Player.jsx","Card.jsx","initialData.js","App.js","reportWebVitals.js","index.js"],"names":["PlayerList","styled","div","props","isActive","color","isDragging","PlayerListText","h1","PlayerImage","img","Player","player","index","useState","active","setActive","draggableId","id","provided","snapshot","ref","innerRef","onClick","draggableProps","dragHandleProps","src","process","content","CardContainer","isDraggingOver","CardTitle","h3","PlayerContainer","Card","card","players","droppableId","type","provided2","title","droppableProps","map","placeholder","initialData","cards","playerIds","cardOrder","Title","App","state","setState","Fragment","onDragEnd","result","source","destination","start","finish","newPlayerIds","Array","from","splice","newCard","newState","startPlayerIds","newStart","finishPlayerIds","newFinish","newCardOrder","direction","cardId","playerId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d880aa82.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport {Draggable} from 'react-beautiful-dnd';\r\n\r\nconst PlayerList = styled.div`\r\n  width: 100%;\r\n  background: ${props => props.isActive ? '#FFF' : '#000'};\r\n  margin-left: -8px;\r\n  border: 8px solid;\r\n  border-color: ${props => props.color};\r\n  border-radius: 10px;\r\n  margin-bottom: 15px;\r\n  box-shadow: ${props => props.isDragging ? '0px 10px 20px rgba(0, 0, 0, 0.25)' : '0px 4px 4px rgba(0, 0, 0, 0.25)'};\r\n  cursor: pointer;\r\n`\r\n\r\nconst PlayerListText = styled.h1`\r\n  color: #7B7B7B;\r\n  text-align: center;\r\n  font-family: sans-serif;\r\n  font-size: 20px;\r\n  margin: 0px;\r\n  padding-top: 3px;\r\n  padding-bottom: 25px;\r\n  text-transform: none;\r\n`\r\n\r\nconst PlayerImage = styled.img`\r\n  position: relative;\r\n  top: 13px;\r\n  height: 40px;\r\n`\r\n\r\nfunction Player({player, index}) {\r\n  const [active, setActive] = useState(true);\r\n\r\n  return (\r\n    <Draggable draggableId={player.id} index={index}>\r\n      {(provided, snapshot) => (\r\n        <PlayerList ref={provided.innerRef} color={player.color} onClick={() => setActive(active ? false : true)} isActive={active} isDragging={snapshot.isDragging} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n          <PlayerListText><PlayerImage src={`${process.env.PUBLIC_URL}/characters/${player.content}.png`} /> {player.content}</PlayerListText>\r\n        </PlayerList>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\nimport Player from './Player';\r\nimport styled from 'styled-components';\r\nimport {Droppable, Draggable} from 'react-beautiful-dnd';\r\n\r\nconst CardContainer = styled.div`\r\n  width: 300px;\r\n  margin: 0px 25px;\r\n  background: ${props => props.color};\r\n  border: ${props => (props.isDraggingOver ? '4px dashed #FFF' : '4px dashed rgba(0,0,0,0)')};\r\n  border-radius: 40px;\r\n  padding: 15px;\r\n  box-shadow: 25px 25px 50px rgba(0, 0, 0, 0.15);\r\n`\r\n\r\nconst CardTitle = styled.h3`\r\n  color: #FFFFFF;\r\n  text-align: center;\r\n  margin-bottom: 25px;\r\n  font-family: sans-serif;\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n`\r\n\r\nconst PlayerContainer = styled.div`\r\n  min-height: 100px;\r\n  width: 100%;\r\n`\r\n\r\nfunction Card({card, players, index}) {\r\n  return (\r\n    <Draggable draggableId={card.id} index={index}>\r\n      {(provided) => (  \r\n        <Droppable droppableId={card.id} type=\"player\">\r\n          {(provided2, snapshot) => (\r\n          <CardContainer ref={provided.innerRef} color={card.color} {...provided.dragHandleProps} isDraggingOver={snapshot.isDraggingOver} {...provided.draggableProps}>\r\n            <CardTitle>\r\n              {card.title}\r\n            </CardTitle>\r\n            <PlayerContainer ref={provided2.innerRef} {...provided2.droppableProps}>\r\n              {players.map((player, index) => <Player key={player.id} player={player} index={index} /> )}\r\n              {provided2.placeholder}\r\n            </PlayerContainer>\r\n          </CardContainer>\r\n          )}\r\n        </Droppable>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default Card;","export const initialData = {\r\n  players: {\r\n    'player-1': { id: 'player-1', content: 'Green', color: '#127f2f'},\r\n    'player-2': { id: 'player-2', content: 'Black', color: '#3e464d'},\r\n    'player-3': { id: 'player-3', content: 'Purple', color: '#691cce'},\r\n    'player-4': { id: 'player-4', content: 'Blue', color: '#001de3'},\r\n    'player-5': { id: 'player-5', content: 'Lime', color: '#50ee37'},\r\n    'player-6': { id: 'player-6', content: 'White', color: '#d9e2f1'},\r\n    'player-7': { id: 'player-7', content: 'Pink', color: '#eb54b9'},\r\n    'player-8': { id: 'player-8', content: 'Cyan', color: '#27feec'},\r\n    'player-9': { id: 'player-9', content: 'Yellow', color: '#f5f656'},\r\n    'player-10': { id: 'player-10', content: 'Red', color: '#f40000'},\r\n    'player-11': { id: 'player-11', content: 'Brown', color: '#704a1e'},\r\n    'player-12': { id: 'player-12', content: 'Orange', color: '#ef7e0e'},\r\n  },\r\n  cards: {\r\n    'card-1': {\r\n      id: 'card-1',\r\n      title: 'Unknown',\r\n      playerIds: ['player-1', 'player-2', 'player-3', 'player-4', 'player-5', 'player-6', 'player-7', 'player-8', 'player-9', 'player-10', 'player-11', 'player-12'],\r\n      color: '#17C9FF',\r\n    },\r\n    'card-2': {\r\n      id: 'card-2',\r\n      title: 'Innoncent',\r\n      playerIds: [],\r\n      color: '#14E668',\r\n    },\r\n    'card-3': {\r\n      id: 'card-3',\r\n      title: 'Suspicious',\r\n      playerIds: [],\r\n      color: '#f0c500',\r\n    },\r\n    'card-4': {\r\n      id: 'card-4',\r\n      title: 'Impostor',\r\n      playerIds: [],\r\n      color: '#fa5e5b',\r\n    },\r\n    'card-5': {\r\n      id: 'card-5',\r\n      title: 'Dead',\r\n      playerIds: [],\r\n      color: '#2d3e52',\r\n    },\r\n  },\r\n  cardOrder: ['card-1', 'card-2', 'card-3', 'card-4', 'card-5']\r\n}","import React, {useState} from 'react';\nimport Card from './Card';\nimport styled from 'styled-components';\nimport {initialData} from './initialData.js';\nimport {DragDropContext, Droppable} from 'react-beautiful-dnd';\n\nconst Title = styled.h1`\n  color: #7B7B7B;\n  font-family: sans-serif;\n  font-size: 30px;\n  text-align: center;\n  padding-top: 25px;\n`\n\nconst CardContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  margin-top: 25px;\n`\n\nconst App = () => {\n  const [state, setState] = useState(initialData);\n\n  const onDragEnd = (result) => {\n    const {draggableId, source, destination, type} = result;\n    if ((!destination) || (source.droppableId === destination.droppableId && source.index === destination.index)) {\n      return;\n    }\n\n    if (type === \"card\") {\n      const newCardOrder = Array.from(state.cardOrder);\n      newCardOrder.splice(source.index, 1);\n      newCardOrder.splice(destination.index, 0, draggableId);\n      \n      const newState = {\n        ...state,\n        cardOrder: newCardOrder\n      }\n      setState(newState);\n      return;\n    }\n\n    if (type === \"player\") {\n      const start = state.cards[source.droppableId];\n      const finish = state.cards[destination.droppableId];\n  \n      if (start === finish) {\n        const card = state.cards[source.droppableId];\n        const newPlayerIds = Array.from(card.playerIds);\n        newPlayerIds.splice(source.index, 1);\n        newPlayerIds.splice(destination.index, 0, draggableId);\n        const newCard = {\n          ...card,\n          playerIds: newPlayerIds\n        };\n        const newState = {\n          ...state,\n          cards: {\n            ...state.cards,\n            [newCard.id]: newCard\n          }\n        }\n        setState(newState);\n        return\n      }\n      // move to another card\n      const startPlayerIds = Array.from(start.playerIds);\n      startPlayerIds.splice(source.index, 1);\n      const newStart = {\n        ...start,\n        playerIds: startPlayerIds\n      }\n  \n      const finishPlayerIds = Array.from(finish.playerIds);\n      finishPlayerIds.splice(destination.index, 0, draggableId);\n      const newFinish = {\n        ...finish,\n        playerIds: finishPlayerIds\n      }\n  \n      const newState = {\n        ...state,\n        cards: {\n          ...state.cards,\n          [newStart.id]: newStart,\n          [newFinish.id]: newFinish\n        }\n      }\n      setState(newState);\n      return;\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Title>Among Us Tracker</Title>\n      <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"all-cards\" direction=\"horizontal\" type=\"card\">\n            {(provided) => (\n              <CardContainer ref={provided.innerRef} {...provided.droppableProps}>\n                {\n                  state.cardOrder.map((cardId, index) => {\n                    const card = state.cards[cardId];\n                    const players = card.playerIds.map(playerId => state.players[playerId]);\n                    return <Card key={cardId} card={card} players={players} index={index} />\n                  })\n                }\n                {provided.placeholder}\n              </CardContainer>\n            )}\n          </Droppable>\n      </DragDropContext>\n    </React.Fragment>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@atlaskit/css-reset';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}